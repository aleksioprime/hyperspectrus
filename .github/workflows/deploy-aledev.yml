name: Deploy to Server

run-name: "Deploy to Server for ${{ github.ref_name }} by ${{ github.actor }}"

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY_ALEDEV }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST_ALEDEV }} >> ~/.ssh/known_hosts

    - name: Deploy on server
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER_ALEDEV }}@${{ secrets.SERVER_HOST_ALEDEV }} << 'EOF'

          # Создаём папку, если её нет
          mkdir -p ~/aledev/services/hyperspectrus
          cd ~/aledev/services/hyperspectrus

          # Загружаем переменные окружения на сервер
          echo "${{ secrets.ENV_VARS }}" > ~/aledev/services/hyperspectrus/.env
          echo "Файл .env загружен на сервер"

          curl -o ~/aledev/services/hyperspectrus/docker-compose.aledev.yaml https://raw.githubusercontent.com/aleksioprime/hyperspectrus/main/web/docker-compose.aledev.yaml

          # Если nginx/aledev.conf НЕ существует, скачиваем его
          if [ ! -f ~/aledev/services/hyperspectrus/nginx/aledev.conf ]; then
            echo "Файл nginx/aledev.conf не найден. Скачиваем..."
            mkdir -p ~/aledev/services/hyperspectrus/nginx
            curl -v -o ~/aledev/services/hyperspectrus/nginx/aledev.conf https://raw.githubusercontent.com/aleksioprime/hyperspectrus/main/web/front/nginx/aledev.conf
          else
            echo "Файл nginx/aledev.conf уже существует. Не скачиваем."
          fi

          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

          docker compose -f docker-compose.aledev.yaml down
          docker compose -f docker-compose.aledev.yaml pull
          docker compose -f docker-compose.aledev.yaml up -d --remove-orphans

          echo "Удаляем старые неиспользуемые docker-образы..."
          docker image prune -a -f
          echo "Готово!"

        EOF
