from PyQt5.QtWidgets import QWidget, QLabel, QPushButton, QVBoxLayout, QTextEdit, QHBoxLayout, QLineEdit

from src.services.video import VideoStream

class VideoWindow(QWidget):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("–í–∏–¥–µ–æ–ø–æ—Ç–æ–∫ Raspberry Pi")
        self.setGeometry(100, 100, 800, 500)

        self.init_ui()
        self.video_stream = VideoStream(self.video_label, self.status_text)
        self.video_stream.connect_button = self.connect_button

    def init_ui(self):
        layout = QVBoxLayout()

        self.video_label = QLabel("")
        self.video_label.setFixedSize(640, 480)
        layout.addWidget(self.video_label)

        # üîπ –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ IP-–∞–¥—Ä–µ—Å–∞
        self.ip_input = QLineEdit("192.168.1.100")  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        layout.addWidget(self.ip_input)

        video_buttons = QHBoxLayout()

        # üîπ –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        self.connect_button = QPushButton("–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
        self.connect_button.clicked.connect(self.connect_to_video)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥
        video_buttons.addWidget(self.connect_button)

        # üîπ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞–¥—Ä–∞
        self.capture_button = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–æ–ø-–∫–∞–¥—Ä")
        self.capture_button.clicked.connect(self.capture_frame)
        video_buttons.addWidget(self.capture_button)

        layout.addLayout(video_buttons)

        self.status_text = QTextEdit()
        self.status_text.setReadOnly(True)
        layout.addWidget(self.status_text)

        self.setLayout(layout)

    def connect_to_video(self):
        """–ü–æ–ª—É—á–∞–µ—Ç IP-–∞–¥—Ä–µ—Å –∏–∑ –ø–æ–ª—è –∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫—É"""
        ip_address = self.ip_input.text().strip()
        if ip_address:
            self.video_stream.connect_to_video(ip_address)

    def capture_frame(self):
        """–í—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ capture_frame —É video_stream"""
        if hasattr(self, "video_stream"):
            self.video_stream.capture_frame()
